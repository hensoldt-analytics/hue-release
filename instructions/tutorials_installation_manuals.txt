I) Copy tutorials in some directory, initiate virtualenv at <path>/tutorials
    $ chkconfig iptables off

    $ ln -s /usr/lib/sandbox-shared/start_scripts/ /usr/lib/start_scripts && \
      ln -s /usr/lib/sandbox-shared/tutorials/ /usr/lib/tutorials ; \
      yum install python-setuptools ; \
      cd /usr/lib/tutorials && \
      easy_install pip && pip install virtualenv && virtualenv .env && \
      . .env/bin/activate && pip install django==1.4 django-mako mysql-python gunicorn ; \
      cd /usr/lib/tutorials/tutorials_app/run/ && sudo -u sandbox bash run.sh

    
II) Chage some config files in tutorials:
    1) Go to file settings.py and change 'auth_db' in DATABASES   
    2) Updates tutorials
       A) Go to directory <path>/tutorials/tutorials_app/run
       B) in file run.sh chage variables:
       - RUN_DIR (full path to directory RUN)
       - GIT_REPO (GIT repository path)
       C) configure CRON to run run.sh file
           a) In terminal, from root user run
            # crontab -e
           b) In editor add line like this for hourly updating:
            0 * * * * bash /home/tutorials/tutorials_app/run/run.sh
            or for daily update at 12:00 pm
            0 0 * * * bash /home/tutorials/tutorials_app/run/run.sh
            P.S. NO spaces before zero!

III) Configure supervisor to start tutorials gunicorn server

$ vim /etc/supervisord.conf

[program:hue_tutorial]
command=/usr/lib/tutorials/.env/bin/python /usr/lib/tutorials/manage.py  run_gunicorn 0:8888
autostart=true              ; start at supervisord start (default: true)
autorestart=true            ; retstart at unexpected quit (default: true)
user=sandbox                   ; setuid to this UNIX account to run the program
log_stderr=true             ; if true, log program stderr (def false)
logfile=/usr/lib/tutorials/tut.log    ; child log path, use NONE for none; default AUTO


IV) Add some changes in HUE:

    
    1) Anonymous user setup:
        Create authorization user without login and password
        A) in hue create user. User Params:
          login : AnonymousUser
          password : 1
        B) Go to file <path_to_hue>/hue/desktop/core/src/desktop/auth/views.py
        C) Find function dt_login
        D) In this function find this rows:
            if request.method == 'POST':
                form = django.contrib.auth.forms.AuthenticationForm(data=request.POST)
        E) Change this rows:
            if request.method == 'POST':
                post_params = request.POST.copy()
                if request.POST['username'] == '' and request.POST['password'] == '':
                    post_params.update({'username' : 'AnonumysUser'})
                    post_params.update({'password' : '1'})
                form = django.contrib.auth.forms.AuthenticationForm(data=post_params)

    2) Save authorization user steps in HUE:
        A) create symlink for hue_common_header.js in hue static folder:
          $ ln -s /usr/lib/tutorials/hue_common_header.js \
            /usr/lib/hue/desktop/core/static/js/hue_common_header.js

        B)
          Do
          $ patch <path_to_hue>/hue/desktop/core/src/desktop/templates/common_header.mako < instructions/patches/common_header.mako.patch

          == OR ==
           open file <path_to_hue>/hue/desktop/core/src/desktop/templates/common_header.mako

           add this script to the header
           
            <script src="/static/js/hue_common_header.js"></script>
           
           add this script in $(document).ready block

            handleAutoLogin()

            Tutorials should listen on 8888 port


V) Adding "Sign in anonymously" button

    Do
    $ patch /home/hue/hue/desktop/core/src/desktop/templates/login.mako < instructions/patches/login.mako.patch

  == OR ==

    In /home/hue/hue/desktop/core/src/desktop/templates/login.mako add
    
      <input type="button" class="btn" value="${_('Sign in anonymously')}" onclick="document.getElementsByName("username")[0].value="AnonymousUser"; document.getElementsByName("password")[0].value="1"; document.getElementsByTagName("form")[0].submit();" />

    Just after submit button.

VI) Adding support of single user mode for hue
    
    $ patch /usr/lib/hue/desktop/core/src/desktop/auth/views.py < /usr/lib/sandbox-shared/instructions/patches/auth_views.py.patch
